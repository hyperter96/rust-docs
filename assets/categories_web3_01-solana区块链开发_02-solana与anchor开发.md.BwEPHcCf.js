import{_ as t}from"./chunks/ArticleMetadata.B-0HZGRR.js";import{_ as l,m as e,a as d,u as r,B as g,e as n,x as A,ai as c,o as h,p as y,q as D}from"./chunks/framework.coFu0xgG.js";import"./chunks/theme.DymPJBeh.js";const x=JSON.parse('{"title":"solana与anchor开发","description":"","frontmatter":{"title":"solana与anchor开发","author":"皮特ᴾᵗ","date":"2024/06/05 11:21","categories":["solana区块链开发"],"tags":["Rust","Web 3.0","solana","anchor"]},"headers":[],"relativePath":"categories/web3/01-solana区块链开发/02-solana与anchor开发.md","filePath":"categories/web3/01-solana区块链开发/02-solana与anchor开发.md","lastUpdated":1719842990000}'),o={name:"categories/web3/01-solana区块链开发/02-solana与anchor开发.md"},F=n("h1",{id:"solana与anchor开发",tabindex:"-1"},[A("solana与anchor开发 "),n("a",{class:"header-anchor",href:"#solana与anchor开发","aria-label":'Permalink to "solana与anchor开发"'},"​")],-1),C=c(`<h2 id="什么是anchor" tabindex="-1">什么是anchor <a class="header-anchor" href="#什么是anchor" aria-label="Permalink to &quot;什么是anchor&quot;">​</a></h2><p>Anchor 是一个用于快速构建安全 Solana 程序的框架。</p><p>使用 Anchor，您可以快速构建程序，因为它会为您编写各种样板，例如帐户和指令数据的（反）序列化。</p><p>您可以更轻松地构建安全程序，因为 Anchor 会为您处理某些安全检查。 最重要的是，它允许您简洁地定义其他检查并将它们与您的业务逻辑分开。</p><p>这两个方面意味着，您不必处理原始 Solana 程序的繁琐部分，而是可以花更多时间处理最重要的事情，即您的产品。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>Anchor 版本管理器是一个用于使用多个版本的 <code>anchor-cli</code> 的工具。它需要与从源代码构建相同的依赖项。如果您已安装 <code>NPM</code> 包，建议您卸载它。</p><p>使用 <code>Cargo</code> 安装 <code>avm</code>。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果您已安装，这将替换您的 <code>anchor</code> 二进制文件。</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/coral-xyz/anchor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> avm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --locked</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --force</span></span></code></pre></div><p>使用 <code>avm</code> 安装最新版本的 CLI，然后将其设置为要使用的版本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">avm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> latest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">avm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> latest</span></span></code></pre></div><h2 id="创建hello-world" tabindex="-1">创建<code>Hello world</code> <a class="header-anchor" href="#创建hello-world" aria-label="Permalink to &quot;创建\`Hello world\`&quot;">​</a></h2><p>如果初始化新项目，命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">anchor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">new-workspace-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><p>这将创建一个您可以移入的新<code>anchor</code>工作区。以下是文件夹中的一些重要文件：</p><ul><li><code>.anchor</code> 文件夹：它包含最新的程序日志和用于测试的本地分类帐</li><li><code>app</code> 文件夹：如果您使用 <code>monorepo</code>，则可以使用它来保存前端的空文件夹</li><li><code>programs</code> 文件夹：此文件夹包含您的程序。它可以包含多个程序，但最初只包含一个与 <code>&lt;new-workspace-name&gt;</code> 同名的程序。此程序已包含一个带有一些示例代码的 <code>lib.rs</code> 文件。</li><li><code>tests</code> 文件夹：包含您的 <code>E2E</code> 测试的文件夹。它将已经包含一个测试 <code>programs/&lt;new-workspace-name&gt;</code> 中的示例代码的文件。</li><li><code>migrations</code> 文件夹：在此文件夹中，您可以保存程序的部署和迁移脚本。</li><li><code>Anchor.toml</code> 文件：此文件为您的程序配置工作区范围的设置。首先，它会配置 <ul><li>您的程序在本地网络上的地址 (<code>[programs.localnet]</code>)</li><li>您的程序可以推送到的注册表 (<code>[registry]</code>)</li><li>可用于测试的提供程序 (<code>[provider]</code>)</li><li><code>Anchor</code> 为您执行的脚本 (<code>[scripts]</code>)。运行<code>anchor test</code>时会运行<code>test</code>脚本。您可以使用 <code>anchor run &lt;script_name&gt;</code> 运行您自己的脚本。</li></ul></li></ul><h2 id="高层概述" tabindex="-1">高层概述 <a class="header-anchor" href="#高层概述" aria-label="Permalink to &quot;高层概述&quot;">​</a></h2><p><code>Anchor</code> 程序由三部分组成。程序模块、标有 <code>#[derive(Accounts)]</code> 的 <code>Accounts</code> 结构和 <code>declared_id</code> 宏。<code>program</code>模块是您编写业务逻辑的地方。<code>Accounts</code> 结构是您验证帐户的地方。<code>declare_id</code> 宏创建一个 <code>ID</code> 字段，用于存储程序的地址。<code>Anchor</code> 使用此硬编码 <code>ID</code> 进行安全检查，它还允许其他包访问您程序的地址。</p><p>当您启动新的 <code>Anchor</code> 项目时，您将看到以下内容：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// use this import to gain access to common anchor features</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// declare an id for your program</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// write your business logic here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(_ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// validate incoming accounts here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {}</span></span></code></pre></div><p>我们将在下一节中详细介绍，但现在请注意，端点与其对应的 <code>Accounts</code> 结构连接的方式是端点中的 <code>ctx</code> 参数。该参数的类型为 <code>Context</code>，它是 <code>Accounts</code> 结构上的通用类型，也就是说，您可以在此处放置帐户验证结构的名称。在此示例中，它是 <code>Initialize</code>。</p><h2 id="accounts结构体" tabindex="-1"><code>Accounts</code>结构体 <a class="header-anchor" href="#accounts结构体" aria-label="Permalink to &quot;\`Accounts\`结构体&quot;">​</a></h2><p><code>Accounts</code>结构体是您定义指令需要哪些账户以及这些账户应遵守哪些约束的地方。您可以通过两个结构体来实现这一点：类型<code>Types</code>和约束<code>Constraints</code>。</p><h3 id="类型types" tabindex="-1">类型<code>Types</code> <a class="header-anchor" href="#类型types" aria-label="Permalink to &quot;类型\`Types\`&quot;">​</a></h3><p>在这里我们将简单解释一下最重要的类型，即<code>Account</code>类型。</p><h4 id="accounts类型" tabindex="-1"><code>Accounts</code>类型 <a class="header-anchor" href="#accounts类型" aria-label="Permalink to &quot;\`Accounts\`类型&quot;">​</a></h4><p>当指令倾向于帐户的反序列化数据时，使用 <code>Account</code> 类型。考虑以下示例，我们在帐户中设置一些数据：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><code>Account</code> 是 <code>T</code> 上的通用类型。此 <code>T</code>是您可以自己创建来存储数据的类型。在此示例中，我们创建了一个带有单个<code>data</code>字段的结构 <code>MyAccount</code> 来存储 <code>u64</code>。<code>Account</code> 需要 <code>T</code> 来实现某些功能（例如，对 <code>T</code> 进行（反）序列化的功能）。大多数情况下，您可以使用 <code>#[account]</code> 属性将这些功能添加到您的数据中，如示例中所示。</p><p>最重要的是，<code>#[account]</code> 属性将该数据的所有者设置为使用 <code>#[account]</code> 的包的 <code>ID</code>（我们之前使用 <code>declared_id</code> 创建的 <code>ID</code>）。然后，<code>Account</code> 类型可以为您检查传递给您的指令的 <code>AccountInfo</code> 是否将其所有者字段设置为正确的程序。在此示例中，<code>MyAccount</code> 在我们自己的包中声明，因此 <code>Account</code> 将验证 <code>my_account</code> 的所有者是否等于我们用 <code>declared_id</code> 声明的地址。</p><p><strong>将 <code>Account&lt;&#39;a, T&gt;</code> 与非<code>Anchor</code>程序帐户一起使用</strong></p><p>在某些情况下，您可能希望您的程序与非<code>Anchor</code>程序进行交互。您仍然可以获得 <code>Account</code> 的所有好处，但您必须编写自定义包装器类型，而不是使用<code> #[account]</code>。例如，<code>Anchor</code> 为代币程序帐户提供了包装器类型，因此它们可以与 <code>Account</code> 一起使用。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_spl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TokenAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    mint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Pubkey</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        constraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mint,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        has_one </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> owner</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    )]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TokenAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> owner</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>要运行此示例，请将 <code>anchor-spl = &quot;&lt;version&gt;&quot;</code> 添加到 <code>Cargo.toml</code> 中的依赖项部分，位于 <code>programs/&lt;your-project-name&gt;/</code> 目录中。<code>&lt;version&gt;</code> 应等于您正在使用的 <code>anchor-lang</code> 版本。</p><p>在此示例中，如果调用者具有管理员权限，我们将设置帐户的<code>data</code>字段。我们通过检查他们是否拥有他们想要更改的帐户的管理员Token来判断调用者是否是管理员。我们通过约束来完成大部分工作，我们将在下一节中介绍。需要记住的重要一点是，我们使用 <code>TokenAccount</code> 类型（环绕Token程序的 <code>Account</code> 结构并添加所需的函数）来使锚点确保传入的帐户由Token程序拥有并让锚点对其进行反序列化。这意味着我们可以在约束（例如 <code>token_account.mint</code>）以及指令函数中使用 <code>TokenAccount</code> 属性。</p><h3 id="约束constraints" tabindex="-1">约束<code>Constraints</code> <a class="header-anchor" href="#约束constraints" aria-label="Permalink to &quot;约束\`Constraints\`&quot;">​</a></h3><p><code>Account</code>类型可以为您完成很多工作，但它们不够dynamic，无法处理安全程序所需的所有安全检查。</p><p>使用以下格式向帐户添加约束：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account(&lt;constraints&gt;)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> AccountType</span></span></code></pre></div><p>一些约束支持自定义错误，</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,&lt;constraint&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyErrorVariant</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> AccountType</span></span></code></pre></div><p>例如，在上面的例子中，我们使用 <code>mut</code> 约束来表明 <code>my_account</code> 应该是可变的。我们使用 <code>has_one</code> 来检查 <code>token_account.owner == Owner.key()</code>。最后，我们使用<code>constraint</code>来检查任意表达式；在本例中，传入的 <code>TokenAccount</code> 是否属于管理员铸币厂。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        constraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mint,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        has_one </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> owner</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    )]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TokenAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> owner</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="安全检查" tabindex="-1">安全检查 <a class="header-anchor" href="#安全检查" aria-label="Permalink to &quot;安全检查&quot;">​</a></h3><p>两种 <code>Anchor</code> 帐户类型 <code>AccountInfo</code> 和 <code>UncheckedAccount</code> 不对传递的帐户实施任何检查。<code>Anchor</code> 实施安全检查，鼓励提供额外的文档来描述为什么不需要额外的检查。</p><p>尝试使用<code>anchor build</code>构建包含以下摘录的程序：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> potentially_dangerous</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> UncheckedAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>将导致类似以下的错误：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>Error:</span></span>
<span class="line"><span>        /anchor/tests/unchecked/programs/unchecked/src/lib.rs:15:8</span></span>
<span class="line"><span>        Struct field &quot;potentially_dangerous&quot; is unsafe, but is not documented.</span></span>
<span class="line"><span>        Please add a \`/// CHECK:\` doc comment explaining why no checks through types are necessary.</span></span>
<span class="line"><span>        See https://book.anchor-lang.com/anchor_in_depth/the_accounts_struct.html#safety-checks for more information.</span></span></code></pre></div><p>为了解决这个问题，请写一个文档注释来描述潜在的安全隐患，例如：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /// CHECK: This is not dangerous because we don&#39;t read or write from this account</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> potentially_dangerous</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> UncheckedAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>文档注释必须是一行或块文档注释（<code>///</code> 或 <code>/**</code>），Rust 才会将其解释为文档属性。双斜杠注释（<code>//</code>）不会被解释为文档属性。</p></div><h2 id="程序模块" tabindex="-1">程序模块 <a class="header-anchor" href="#程序模块" aria-label="Permalink to &quot;程序模块&quot;">​</a></h2><p>程序模块是您定义业务逻辑的地方。您可以通过编写可由客户端或其他程序调用的函数来实现这一点。您已经看到了此类函数的一个示例，即上一节中的 <code>set_data</code> 函数。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">token_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="上下文context" tabindex="-1">上下文<code>Context</code> <a class="header-anchor" href="#上下文context" aria-label="Permalink to &quot;上下文\`Context\`&quot;">​</a></h3><p>每个端点函数都以 <code>Context</code> 类型作为其第一个参数。通过此上下文参数，它可以访问帐户 (<code>ctx.accounts</code>)、执行程序的程序 ID (<code>ctx.program_id</code>) 和剩余帐户 (<code>ctx.remaining_accounts</code>)。<code>remaining_accounts</code> 是一个向量，其中包含传递到指令中但未在 <code>Accounts</code> 结构中声明的所有帐户。当您希望函数处理可变数量的帐户时，这很有用，例如在初始化具有可变数量玩家的游戏时。</p><h3 id="指令数据" tabindex="-1">指令数据 <a class="header-anchor" href="#指令数据" aria-label="Permalink to &quot;指令数据&quot;">​</a></h3><p>如果您的函数需要指令数据，您可以通过在上下文参数后向函数添加参数来添加它。然后，<code>Anchor</code> 会自动将指令数据反序列化为参数。您可以拥有任意数量的参数。您甚至可以传入自己的类型，只要您对它们使用<code>#[derive(AnchorDeserialize)]</code> 或自己为它们实现 <code>AnchorDeserialize</code> 即可。以下是使用自定义类型作为指令数据参数的示例：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AnchorSerialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AnchorDeserialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Eq</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PartialEq</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Clone</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Copy</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>方便的是，<code>#[account]</code> 为 <code>MyAccount</code> 实现了 <code>Anchor(De)Serialize</code>，因此上面的示例可以简化。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_inner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h2><p><code>Anchor</code>程序中有两种类型的错误。<code>anchor</code>错误和<code>non-anchor</code>错误。<code>anchor</code>错误可以分为框架从其自身代码内部返回的<code>anchor</code>内部错误或用户（您！）可以返回的自定义错误。</p><ul><li><code>anchor</code>错误 <ul><li><code>anchor</code>内部错误</li><li>自定义错误</li></ul></li><li><code>non-anchor</code>错误</li></ul><p><code>anchor</code>错误提供了一系列信息，例如错误名称和编号、代码中抛出错误的位置或违反约束（例如 <code>mut</code> 约束）的帐户。一旦在程序内部抛出错误，您就可以在锚点客户端（如 <code>typescript</code>客户端）中访问错误信息。<code>typescript</code> 客户端还会使用其他信息丰富错误，包括抛出错误的程序以及导致抛出错误的程序的 <code>CPI</code> 调用（本书中对此进行了解释）。里程碑章节探讨了所有这些在实践中如何协同工作。现在，让我们看看如何从程序内部返回不同的错误。</p><h3 id="anchor内部错误" tabindex="-1"><code>anchor</code>内部错误 <a class="header-anchor" href="#anchor内部错误" aria-label="Permalink to &quot;\`anchor\`内部错误&quot;">​</a></h3><p><code>Anchor</code> 有许多不同的内部错误代码。这些代码不供用户使用，但研究参考资料以了解代码与其原因之间的映射很有用。例如，当违反约束时会抛出这些代码，例如当帐户标记为 <code>mut</code> 但其 <code>is_writable</code> 属性为 <code>false</code> 时。</p><h3 id="自定义错误" tabindex="-1">自定义错误 <a class="header-anchor" href="#自定义错误" aria-label="Permalink to &quot;自定义错误&quot;">​</a></h3><p>您可以使用 <code>error_code</code> 属性添加程序独有的错误。</p><p>只需将其添加到具有您选择的名称的枚举中即可。然后，您可以将枚举的变体用作程序中的错误。此外，您可以向各个变体添加消息属性。如果发生错误，客户端将显示此错误消息。自定义错误代码编号从自定义错误偏移量开始。</p><p>要实际抛出错误，请使用 <code>err!</code> 或 <code>error!</code> 宏。这些将文件和行信息添加到错误中，然后由<code>anchor</code>记录。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> err!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">DataTooLarge</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_inner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[error_code]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyError</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[msg(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;MyAccount may only hold data below 100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    DataTooLarge</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h4 id="require" tabindex="-1"><code>require!</code> <a class="header-anchor" href="#require" aria-label="Permalink to &quot;\`require!\`&quot;">​</a></h4><p>您可以使用 <code>require</code> 宏来简化编写错误。上面的代码可以简化为这样（请注意，<code>&gt;=</code> 翻转为 <code>&lt;</code>）：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> hello_anchor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        require!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MyError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">DataTooLarge</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">my_account</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_inner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[error_code]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyError</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[msg(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;MyAccount may only hold data below 100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    DataTooLarge</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>有几个 <code>require</code> 宏可供选择（在文档中搜索 <code>require</code>）。比较公钥时，务必使用 <code>require</code> 语句的密钥变体，例如 <code>require_keys_eq</code> 而不是 <code>require_eq</code>，因为使用 <code>require_eq</code> 比较公钥非常昂贵。</p><blockquote><p>（最终，所有程序都会返回相同的错误：<code>ProgramError</code>。</p></blockquote><p>此错误有一个用于自定义错误号的字段。这是 <code>Anchor</code> 放置其内部和自定义错误代码的地方。但是，这只是一个数字，一个数字也只是如此有用。因此，此外，在 <code>anchor</code>错误的情况下，<code>Anchor</code> 会记录返回的 <code>anchor</code>错误，<code>Anchor</code> 客户端会解析这些日志以提供尽可能多的信息。这并不总是可行的。例如，目前没有简单的方法可以在关闭预检检查的情况下获取已处理事务的日志。此外，非 <code>Anchor</code> 或旧 <code>Anchor</code> 程序可能不会记录 <code>anchor</code>错误。在这些情况下，<code>Anchor</code> 将回退到检查事务返回的错误号是否与 <code>IDL</code> 中定义的错误号或 <code>Anchor</code> 内部错误代码匹配。如果是这样，<code>Anchor</code> 至少会用错误消息丰富错误。此外，如果有可用的日志，<code>Anchor</code> 将始终尝试解析程序错误堆栈并返回该堆栈，以便您知道错误是从哪个程序返回的。</p><h2 id="跨程序调用" tabindex="-1">跨程序调用 <a class="header-anchor" href="#跨程序调用" aria-label="Permalink to &quot;跨程序调用&quot;">​</a></h2><p>程序之间相互交互通常很有用。在 Solana 中，这是通过跨程序调用 (CPI) 实现的。</p><p>考虑以下<code>puppet</code>和<code>puppet master</code>的例子。诚然，这不是很现实，但它可以让我们向您展示 <code>CPI</code> 的许多细微差别。中间部分的<code>milestone</code>项目涵盖了一个更现实的具有多个 <code>CPI</code> 的计划。</p><h3 id="设置基本-cpi-功能" tabindex="-1">设置基本 <code>CPI</code> 功能 <a class="header-anchor" href="#设置基本-cpi-功能" aria-label="Permalink to &quot;设置基本 \`CPI\` 功能&quot;">​</a></h3><p>创建工作区，</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">anchor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> puppet</span></span></code></pre></div><p>并复制以下代码，</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(_ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(init, payer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user, space </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 8 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 8)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> system_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>这里没有什么特别的事情发生。这是一个非常简单的程序！有趣的部分是它如何与我们要创建的下一个程序交互。</p><p>仍然在项目内部，使用以下命令初始化一个新的 <code>puppet-master</code> 程序：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">anchor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> puppet-master</span></span></code></pre></div><p>在工作区内复制以下代码，</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;HmbTLCmaGvZhKnn1Zfa1JVnp7vkMV4DYVxPLWBVoN65L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet_master</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pull_strings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_program </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_accounts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CpiContext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_program, cpi_accounts);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_ctx, data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>还要在 <code>Anchor.toml</code> 的 <code>[programs.localnet]</code> 部分中添加行 <code>puppet_master = &quot;HmbTLCmaGvZhKnn1Zfa1JVnp7vkMV4DYVxPLWBVoN65L&quot;</code>。最后，通过将以下行添加到 <code>puppet-master</code> 程序文件夹内的 <code>Cargo.toml</code> 文件的 <code>[dependencies]</code> 部分，将 <code>puppet</code> 程序导入 <code>puppet-master</code> 程序：</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet = { path = </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;../puppet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, features = [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;cpi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]}</span></span></code></pre></div><p>使用 <code>features = [&quot;cpi&quot;]</code> 后，我们不仅可以使用 <code>puppet</code> 的类型，还可以使用其指令构建器和 <code>cpi</code> 函数。如果没有这些，我们将不得不使用低级 solana 系统调用。幸运的是，<code>anchor</code> 在这些之上提供了抽象。通过启用 <code>cpi</code> 功能，<code>puppet-master</code> 程序可以访问 <code>puppet::cpi</code> 模块。<code>Anchor</code>会自动生成此模块，其中包含为程序量身定制的指令构建器和 <code>cpi</code> 帮助程序。</p><p>对于 <code>puppet</code> 程序，puppet-master 使用 <code>puppet::cpi::accounts</code> 模块提供的 <code>SetData</code> 指令构建器结构来提交 <code>puppet</code> 程序的 <code>SetData</code> 指令所需的帐户。然后，<code>puppet-master</code> 创建一个新的 <code>cpi</code> 上下文并将其传递给 <code>puppet::cpi::set_data cpi</code> 函数。此函数与 <code>puppet</code> 程序中的 <code>set_data</code> 函数具有完全相同的功能，不同之处在于它需要 <code>CpiContext</code> 而不是 <code>Context</code>。</p><p>设置 <code>CPI</code> 可能会分散程序的业务逻辑，因此建议将 <code>CPI</code> 设置移至指令的 <code>impl</code> 块中。然后，<code>puppet-master</code> 程序如下所示：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;HmbTLCmaGvZhKnn1Zfa1JVnp7vkMV4DYVxPLWBVoN65L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet_master</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pull_strings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">impl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CpiContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_program </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_accounts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        CpiContext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_program, cpi_accounts)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以通过将 <code>puppet.ts</code> 文件的内容替换为以下内容来验证一切是否按预期工作：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@coral-xyz/anchor&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Program } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@coral-xyz/anchor&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Keypair } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@solana/web3.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { expect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;chai&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Puppet } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;../target/types/puppet&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { PuppetMaster } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;../target/types/puppet_master&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;puppet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.AnchorProvider.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  anchor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(provider)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetProgram</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.workspace.Puppet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetMasterProgram</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.workspace</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .PuppetMaster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PuppetMaster</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetKeypair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Keypair.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">  it</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Does CPI!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetProgram.methods</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet: puppetKeypair.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        user: provider.wallet.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">signers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([puppetKeypair])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">rpc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetMasterProgram.methods</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">BN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppetProgram: puppetProgram.programId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet: puppetKeypair.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">rpc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetProgram.account.data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(puppetKeypair.publicKey)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      ).data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ).to.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre></div><p>然后运行<code>anchor test</code>。</p><h3 id="特权扩展" tabindex="-1">特权扩展 <a class="header-anchor" href="#特权扩展" aria-label="Permalink to &quot;特权扩展&quot;">​</a></h3><p><code>CPI</code> 将调用者的权限扩展到被调用者。<code>Puppet</code> 帐户作为可变帐户传递给 <code>Puppet-master</code>，但它在 <code>Puppet</code> 程序中仍然是可变的（否则测试中的期望会失败）。签名也是如此。</p><p>如果您想亲自证明这一点，请在 <code>Puppet</code> 程序中的数据结构中添加一个权限字段。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[account]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Pubkey</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>并调整<code>initialize</code>函数，</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Pubkey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">authority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authority;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>将<code>data</code>结构体中 <code>Pubkey</code> 字段的 <code>puppet</code> 字段的空间约束添加 <code>32</code>。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(init, payer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user, space </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 8 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 8 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 32)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> system_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>调整 <code>SetData</code> 验证结构体，</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, has_one </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authority)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><code>has_one</code> 约束检查了 <code>puppet.authority = authority.key()</code>。</p><p><code>puppet-master</code>程序现在也需要作出调整：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> anchor_lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">prelude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">declare_id!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;HmbTLCmaGvZhKnn1Zfa1JVnp7vkMV4DYVxPLWBVoN65L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[program]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet_master</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pull_strings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    #[account(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Account</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // Even though the puppet program already checks that authority is a signer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // using the Signer type here is still required because the anchor ts client</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // can not infer signers from programs called via CPIs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">impl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CpiContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_program </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_accounts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">authority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        CpiContext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_program, cpi_accounts)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>最后，修改一下测试，</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@coral-xyz/anchor&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Program } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@coral-xyz/anchor&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Keypair } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;@solana/web3.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { Puppet } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;../target/types/puppet&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { PuppetMaster } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;../target/types/puppet_master&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { expect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;chai&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;puppet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.AnchorProvider.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  anchor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(provider)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetProgram</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.workspace.Puppet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Puppet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetMasterProgram</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.workspace</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .PuppetMaster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Program</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PuppetMaster</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> puppetKeypair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Keypair.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> authorityKeypair</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Keypair.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">  it</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Does CPI!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetProgram.methods</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(authorityKeypair.publicKey)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet: puppetKeypair.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        user: provider.wallet.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">signers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([puppetKeypair])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">rpc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetMasterProgram.methods</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anchor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">BN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppetProgram: puppetProgram.programId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet: puppetKeypair.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        authority: authorityKeypair.publicKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">signers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([authorityKeypair])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">rpc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppetProgram.account.data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(puppetKeypair.publicKey)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      ).data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ).to.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre></div><p>测试通过是因为授权机构给予<code>puppet-master</code>的签名随后扩展到<code>puppet</code>程序，<code>puppet</code>程序使用该签名来检查<code>puppet</code>账户的授权机构是否已签署交易。</p><blockquote><p>权限扩展很方便，但也很危险。如果无意中对恶意程序进行了 <code>CPI</code>，则该程序具有与调用者相同的权限。 <code>Anchor</code> 通过两种措施保护您免受恶意程序的 <code>CPI</code> 攻击。首先， <code>Program&lt;&#39;info, T&gt;</code> 类型检查给定的账户是否是预期的程序 <code>T</code>。如果您忘记使用 <code>Program</code> 类型，自动生成的 <code>cpi</code> 函数（在前面的示例中为 <code>puppet::cpi::set_data</code>）还会检查 <code>cpi_program</code> 参数是否等于预期的程序。</p></blockquote><h3 id="重载账户" tabindex="-1">重载账户 <a class="header-anchor" href="#重载账户" aria-label="Permalink to &quot;重载账户&quot;">​</a></h3><p>在 <code>puppet</code> 程序中，<code>Account&lt;&#39;info, T&gt;</code> 类型用于 <code>puppet</code> 帐户。如果 <code>CPI</code> 编辑该类型的帐户，则调用者的帐户在指令期间不会发生变化。</p><p>您可以通过在 <code>puppet::cpi::set_data(ctx.accounts.set_data_ctx(), data) cpi</code> 调用后立即添加以下内容来轻松看到这一点。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), data)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    panic!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">关键要点</p><p>您的测试将失败。但为什么呢？毕竟测试曾经通过，所以 <code>cpi</code> 肯定将<code>data</code>字段更改为 <code>42</code>。</p></div><p>调用者中的<code>data</code>字段未更新为 <code>42</code> 的原因是，在指令的开头，<code>Account&lt;&#39;info, T&gt;</code> 类型将传入的字节反序列化为新的结构。此结构不再与帐户中的底层数据相关联。<code>CPI</code> 更改了底层帐户中的数据，但由于调用者中的结构与底层帐户没有任何联系，因此调用者中的结构保持不变。</p><p>如果您需要读取刚刚被 <code>CPI</code> 更改的帐户的值，则可以调用其重新加载方法，该方法将重新反序列化帐户。如果您在 <code>cpi</code> 调用之后立即输入 <code>ctx.accounts.puppet.reload()?;</code>，测试将再次通过。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data_ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), data)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    panic!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(())</span></span></code></pre></div><h3 id="从handler函数返回值" tabindex="-1">从<code>handler</code>函数返回值 <a class="header-anchor" href="#从handler函数返回值" aria-label="Permalink to &quot;从\`handler\`函数返回值&quot;">​</a></h3><p><code>Anchor</code> 的<code>handler</code>程序函数能够使用 Solana <code>set_return_data</code> 和 <code>get_return_data</code> 系统调用返回数据。此数据可用于 <code>CPI</code> 调用者和客户端。</p><p>不要返回 <code>Result&lt;()&gt;</code>，请考虑上面的 <code>set_data</code> 函数的这个版本，该版本已被修改为返回 <code>Result&lt;u64&gt;</code>：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> puppet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>定义非<code>unit</code>类型的返回类型 <code>()</code> 将导致 <code>Anchor</code> 在调用此函数时透明地使用给定类型（本例中为 <code>u64</code>）调用 <code>set_return_data</code>。<code>CPI</code> 调用的返回被包装在一个结构中，以允许延迟检索此返回数据。例如</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pull_strings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PullStrings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_program </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet_program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_accounts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SetData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">to_account_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cpi_ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CpiContext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_program, cpi_accounts);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> puppet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cpi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">set_data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(cpi_ctx, data)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // The below statement calls sol_get_return and deserializes the result.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // \`return_data\` contains the return from \`set_data\`,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // which in this example is just \`data\`.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> return_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // ... do something with the \`return_data\` ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">关键要点</p><p>返回的类型必须实现 <code>AnchorSerialize</code> 和 <code>AnchorDeserialize</code> 特征，例如：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">#[derive(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AnchorSerialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AnchorDeserialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> StructReturn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    pub</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> u64</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div></div><h4 id="在客户端中读取返回数据" tabindex="-1">在客户端中读取返回数据 <a class="header-anchor" href="#在客户端中读取返回数据" aria-label="Permalink to &quot;在客户端中读取返回数据&quot;">​</a></h4><p>甚至可以使用没有 <code>CPI</code> 的返回值。如果您使用函数来计算前端所需的值而无需重写前端的代码，这可能会很有用。</p><p>无论您是否使用 <code>CPI</code>，您都可以使用<code>view</code>函数读取最后设置为交易中返回数据的任何内容（<code>view</code>模拟交易并读取<code>Program return</code>日志）。</p><p>例如:</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> returnData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> program</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">methods</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">calculate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(someVariable)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    acc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> somePubkey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    anotherAcc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> someOtherPubkey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span></code></pre></div><h4 id="返回data大小限制解决方法" tabindex="-1">返回<code>Data</code>大小限制解决方法 <a class="header-anchor" href="#返回data大小限制解决方法" aria-label="Permalink to &quot;返回\`Data\`大小限制解决方法&quot;">​</a></h4><p><code>set_return_data</code> 和 <code>get_return_data</code> 系统调用限制为 <code>1024</code> 字节，因此值得简要解释一下 <code>CPI</code> 返回值的旧解决方法。</p><p>通过将 <code>CPI</code> 与 <code>reload</code> 结合使用，可以模拟返回值。可以想象，<code>puppet</code> 程序不只是将数据字段设置为 <code>42</code>，而是使用 <code>42</code> 进行一些计算并将结果保存在数据中。然后，<code>puppet-master</code> 可以在 <code>cpi</code> 之后调用 <code>reload</code> 并使用 <code>puppet</code> 程序计算的结果。</p><h2 id="程序派生地址pda" tabindex="-1">程序派生地址PDA <a class="header-anchor" href="#程序派生地址pda" aria-label="Permalink to &quot;程序派生地址PDA&quot;">​</a></h2>`,143);function B(s,u,E,m,b,v){const p=t,k=e("ClientOnly");return h(),d("div",null,[F,r(k,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(h(),y(p,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),C])}const q=l(o,[["render",B]]);export{x as __pageData,q as default};
