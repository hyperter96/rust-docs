import{_ as h}from"./chunks/ArticleMetadata.B6LTgUMn.js";import{_ as k,m as o,a as p,u as r,B as c,e as t,x as d,ai as y,o as l,p as g,q as A}from"./chunks/framework.coFu0xgG.js";import"./chunks/theme.CAIqAJ98.js";const q=JSON.parse('{"title":"solana基础知识","description":"","frontmatter":{"title":"solana基础知识","author":"皮特ᴾᵗ","date":"2024/06/03 12:21","categories":["solana区块链开发"],"tags":["Rust","Web 3.0","solana"]},"headers":[],"relativePath":"categories/web3/01-solana区块链开发/01-solana基础知识.md","filePath":"categories/web3/01-solana区块链开发/01-solana基础知识.md","lastUpdated":1718385253000}'),f={name:"categories/web3/01-solana区块链开发/01-solana基础知识.md"},u=t("h1",{id:"solana基础知识",tabindex:"-1"},[d("solana基础知识 "),t("a",{class:"header-anchor",href:"#solana基础知识","aria-label":'Permalink to "solana基础知识"'},"​")],-1),D=y(`<h2 id="solana网络" tabindex="-1">solana网络 <a class="header-anchor" href="#solana网络" aria-label="Permalink to &quot;solana网络&quot;">​</a></h2><p>solana是为<strong>大规模采用</strong>而构建的区块链，它是一个<strong>高性能网络</strong>、拥有各种用例，包括金融、NFT、支付和游戏。solana作为一个单一的全球状态机运行、是<strong>开放</strong>的、<strong>可互操作</strong>的和<strong>去中心化</strong>的。</p><p>我们看到如下概览：</p><p><img src="https://rust.hyperter.top/screenshot/solana-content.png" alt=""></p><h3 id="solana网络的技术优势" tabindex="-1">solana网络的技术优势 <a class="header-anchor" href="#solana网络的技术优势" aria-label="Permalink to &quot;solana网络的技术优势&quot;">​</a></h3><ul><li>迅速的确认时间：和其他区块链相比，一个solana交易可以在大约400毫秒内被整个网络验证</li><li>低交易费用：通常每个交易签名大约需要<code>5000</code>个<code>Lamports</code></li><li>并行执行的程序和交易</li><li>适合高性能应用程序</li></ul><p>所有这些实际上是通过全球范围内分布的超过<code>25000</code>个投票验证者保持着有效的共识，因此，这是一个由来自世界各地的实体和个人运行的非常全球化的网络。</p><h3 id="solana网络实际是如何工作的" tabindex="-1">solana网络实际是如何工作的 <a class="header-anchor" href="#solana网络实际是如何工作的" aria-label="Permalink to &quot;solana网络实际是如何工作的&quot;">​</a></h3><p><img src="https://rust.hyperter.top/screenshot/solana-network.png" alt=""></p><p>在高层次上，有一个领导者和多个验证者，这位领导者将接收整个区块链中的所有交易。它将处理在前端创建的所有这些交易以及你习惯于与区块链交互的去中心化应用程序，然后领导者将接收的这些交易打包进区块中，这些区块随后将通过整个solana网络传播，通过全球<code>2500</code>个投票。</p><p>验证者使用一个名为<code>turbine</code>的代码片段，而<code>turbine</code>仅仅是solana协议的区块传播部分，这些交易区块就这样被发送到世界各地。</p><p>solana有趣的一点是所有这些交易实际上可以并行执行，这归功于solana的设计方式，其中的一部分原因是，solana上的每一笔交易实际上是无状态的，所以特定的交易不维护自己的状态或数据，它是与实际存储这些数据位的账户互动，但是每一笔交易都将读取和写入solana区块链上的不同账户。因为所有这些读取和写入在区块链上以不同的方式处理。它允许所有这些交易非常快速的执行，这再次导致了非常低的确认时间和整个网络非常快速的传播。</p><p>所有这些使用了一种称为历史证明的概念。</p><h2 id="solana编程模型" tabindex="-1">solana编程模型 <a class="header-anchor" href="#solana编程模型" aria-label="Permalink to &quot;solana编程模型&quot;">​</a></h2><h3 id="accounts" tabindex="-1"><code>Accounts</code> <a class="header-anchor" href="#accounts" aria-label="Permalink to &quot;\`Accounts\`&quot;">​</a></h3><p>账户是solana区块链的关键部分之一，基本上在solana上一切都是账户。你可以将账户看作是操作系统上的文件，特别是如果你习惯基于Linux的操作系统，每一个程序，每一位数据都是一个文件，在solana上非常类似，一切都是账户。账户有以下特点：</p><ul><li>唯一的<code>256</code>位地址</li><li>可持有solana区块链上本地的<code>SOL TOKEN</code></li><li>存储任意数据，以原始字节的形式</li><li>实际的数据存储需要支付我们称之为租金的费用</li></ul><div class="warning custom-block"><p class="custom-block-title">关键事项</p><ul><li>任何人都可以向账户充值<code>SOL TOKEN</code>，并且任何人都可以以无需许可的形式从账户中读取数据</li><li>只有账户的所有者才能实际扣除<code>SOL</code>或者从中移除<code>SOL</code>余额，或者实际修改账户的底层数据</li></ul><p>这实际上是你所希望的，因为这样可以固有的确保谁真正拥有数据，并且可以进行所有权验证。</p></div><p>以下是<code>Accounts</code>的字段：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    key</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// The address of account 账户地址</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    lamports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// Lamports currently held 实际总余额</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Uint</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// Data stored in the account 实际数据</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    is_executable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// Is this data a program? 可执行程序标志</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    owner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">PublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// The program with write access 所有者值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>值得注意的是，</p><ul><li>1个<code>sol</code>大约是10亿个<code>Lamports</code></li><li><code>data</code>是以无符号整数或<code>u8</code>数组形式存储的原始字节</li><li><code>is_executable</code>如果为<code>true</code>，它是一个可执行程序，如果为<code>false</code>，那么它只是一个数据账户</li><li><code>owner</code>表示只有该账户的程序所有者实际上有能力更新该账户中的数据</li></ul><h3 id="programs" tabindex="-1"><code>Programs</code> <a class="header-anchor" href="#programs" aria-label="Permalink to &quot;\`Programs\`&quot;">​</a></h3><p>在其他区块链上，程序可能被称为智能合约，但在solana上，它们被称为程序。这些基本上是你可以部署到区块链上的代码片段，以去中心化的方式，实际上会执行某些指令和处理。特别是对于solana的程序，它们是</p><ul><li><p>一种特殊类型的账户：如果它们有一个可执行标志为<code>true</code>，solana运行时知道它实际上是一个程序</p></li><li><p>存储在该特定账户内的数据是eBPF字节码：这是Berkeley数据包括滤器字节码</p></li><li><p>都是无状态的，它们只能读取和写入其它账户的数据，因此它们不能写入自己账户的数据</p><ul><li>这也是允许程序并行执行的因素之一，也促使solana区块链运行速度的提升</li></ul></li><li><p>只有所有者才能更新账户，因此如果你正在编写程序，你可以让你编写的任何程序成为任何其它账户的所有者，只要你有适当的权限，只有你的程序才能写入那些账户的数据</p></li><li><p>所有程序执行指令：指令是你试图要求solana运行时或特定程序执行的信息位</p></li><li><p>可以使用称为跨程序调用CPI的东西相互发送指令，或者你可以用前端，如Javascript或Typescript上的网站获取中心化应用上构建指令，然后将其发送到solana示意执行</p></li></ul><h4 id="程序指令" tabindex="-1">程序指令 <a class="header-anchor" href="#程序指令" aria-label="Permalink to &quot;程序指令&quot;">​</a></h4><p>程序的原始指令形态如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    program_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    keys</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        key</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">PublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        is_mutable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        is_signer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Uint</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// Action + args</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>执行指令时，你会有<code>key</code>字段的数组，这些都是实际参与执行特定指令的账户，这是让solana运行时性能非常高的原因之一，每个在交易内或特定于指令内被触及的地址或账户，你都必须在指令内提供所有这些值和地址。</p><p>这种技术是solana区块链和solana运行时能够并行执行的原因之一。</p><p>最后，你有一定量的数据以原始字节的形式。这些数据通过网络发送到你尝试交互的那个程序，也就是<code>program_id</code>，然后你取所有这些指令，可以有多个指令，并将它们在一次交易内捆绑在一起，一次交易是你实际发送到RPC或发送到solana网络上的验证者的东西，然后通过那个领导者过程和整个网络的<code>turbine</code>执行或<code>turbine</code>区块传播被处理。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    message</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        instructions</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array&lt;Instruction&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// List of instructions</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        recent_blockhash</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// for de-duplication</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        fee_payer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">PublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// pays &quot;gas&quot; fee</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    signers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array&lt;Uint</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Array&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>这里你可以看到一次交易的原始形式，你有一些关键信息，我们有</p><ul><li><p>指令数组<code>instructions</code>，只是这次交易尝试执行的指令列表</p></li><li><p>最近的区块哈希<code>recent_blockhash</code>，用于交易的去重复</p></li><li><p>实际将为你的特定交易支付燃料费的付费方地址<code>fee_payer</code></p></li><li><p>所有签名者的宿主<code>signers</code></p><p>所以在每次交易中，每当一个账户更新数据时，无论是更新实际数据本身，还是从账户中扣除<code>Lamport</code>或<code>sol</code>，都需要这个公钥实际签署交易，这允许在区块链上进行加密验证和签名验证。我们只是将所有这些签名以原始字节的形式包含在每次交易中</p></li></ul><div class="warning custom-block"><p class="custom-block-title">交易和指令的关键要点</p><ul><li>程序调用指令</li><li>指令通过交易发送</li><li>交易需要是原子的</li><li>所有交易都必须签名</li></ul></div><p>现在我们将通过交易的生命周期和这一切联系起来，</p><p><img src="https://rust.hyperter.top/screenshot/solana-lifecycle.png" alt=""></p>`,37);function B(i,F,m,C,b,_){const n=h,e=o("ClientOnly");return l(),p("div",null,[u,r(e,null,{default:c(()=>{var s,a;return[(((s=i.$frontmatter)==null?void 0:s.aside)??!0)&&(((a=i.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),g(n,{key:0,article:i.$frontmatter},null,8,["article"])):A("",!0)]}),_:1}),D])}const x=k(f,[["render",B]]);export{q as __pageData,x as default};
